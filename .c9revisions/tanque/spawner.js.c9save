{"ts":1375826210077,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\nfunction Spawner(){\n    this.totalEnemies = 0;\n    this.maxEnemies = 4;\n    this.queue = [];\n    this.enemies = [];\n    this.spawnPos = [{x:2*16,y:1*16},{x:18*16,y:1*16},{x:34*16,y:1*16}];\n    this.spawnCounter = 0;\n    this.intervalId = 0;\n    this.collisionInstance = null;\n    this.itemSpawnerInstance = null;\n    this.bulletSpriteSheet = null;\n    this.explosionSpriteSheet = null;\n    this.playerSpriteSheet = null;\n    this.spawnSpriteSheet = null;\n    this.IAinput = null;\n    this.freezingEnemies = false;\n    \n    \n    this.setIAInput = function(ia){\n        this.IAinput = ia;\n    };\n\n    this.setItemSpawner = function(is){\n        this.itemSpawnerInstance = is;\n    }\n    \n    this.addEnemy = function(type){\n        this.queue.push(type);\n    }\n    \n    this.addEnemyList = function(list){\n        this.totalEnemies = list.length;\n        this.queue = list;\n        this.intervalId = setInterval((function(self) {            //Self-executing func which takes 'this' as self\n                         return function() {    //Return a function in the context of 'self'\n                            if (self.enemies.length < self.maxEnemies)\n                                self.spawnEnemy();\n                         };\n                     })(this),\n                     3000 );\n\n    };\n    \n    this.setSpriteSheets = function(player, bullets, explosion, spawn){\n        this.bulletSpriteSheet = bullets;\n        this.explosionSpriteSheet = explosion;\n        this.playerSpriteSheet = player;\n        this.spawnSpriteSheet = spawn;\n    }\n    \n    this.setCollision = function(col){\n        this.collisionInstance = col;\n    }\n    \n    this.spawnEnemy = function(){\n        var e = this.getEnemyFromQueue();\n        var subsubtype = \"\";\n        var p = null;\n        if (e>4) {  // this tank will carry an item    \n            subsubtype = \"special\";\n            e-=4;\n        }\n\n        if (e===1){\n            p = this.createBasicEnemy();            \n        } else if (e===2){\n            p = this.createBasicEnemy(); \n            p.speed = 3.0;            \n        } else if (e===3){\n            p = this.createBasicEnemy();  \n            p.bulletSpeed = 7.5;              \n        } else if (e===4){\n            p = this.createBasicEnemy(); \n            p.maxLives = 4;            \n        }\n        \n        if (p!==null){            \n            p.subtype = e;\n            p.points = e*100;\n            p.subsubtype = subsubtype;\n            this.totalEnemies--; \n\n            if (this.freezingEnemies){\n                p.isFrozen = true;\n            }   \n        }\n    }\n\n    this.freezeEnemies = function(time){\n        this.freezingEnemies = true;\n        for (var i in this.enemies){\n            this.enemies[i].isFrozen = true;\n        }\n\n        setTimeout((function(self) {         //Self-executing func which takes 'this' as self\n                         return function() {   //Return a function in the context of 'self'\n                            for (var i in self.enemies){\n                                self.enemies[i].isFrozen = false;\n                            }\n                            self.freezingEnemies = false;\n                         };\n                     })(this),\n                     time );\n    } \n    \n    this.createBasicEnemy = function(){\n        var p = new Player();\n        p.spawningPos = this.spawnPos[this.spawnCounter++%this.spawnPos.length];\n        p.type = \"enemy\";\n        p.speed = 0.85;\n        p.bulletSpeed = 5;\n        p.maxBullets = 1;\n        p.setItemSpawner(this.itemSpawnerInstance);\n        p.spriteSheet = this.playerSpriteSheet; \n        p.bulletSpriteSheet = this.bulletSpriteSheet;\n        p.explosionSpritesheet = this.explosionSpriteSheet;\n        p.spawnSpriteSheet = this.spawnSpriteSheet;\n        p.setCollisionInstance(this.collisionInstance);\n        p.setInput(this.IAinput.clone()); \n\n       \n        p.spawnerInstance = this;\n        this.enemies.push(p);\n        \n        return p;\n    }\n    \n    this.getEnemyFromQueue = function(){\n        return this.queue.splice(0,1)[0];\n    }\n    \n    this.removeDeadEnemy = function(p){\n        this.enemies.splice(this.enemies.indexOf(p),1);\n    }\n    \n}"]],"start1":0,"start2":0,"length1":0,"length2":4193}]],"length":4193}
{"contributors":[],"silentsave":false,"ts":1375826231636,"patch":[[{"diffs":[[0,",{x:34*16,y:"],[-1,"1"],[1,"2"],[0,"*16}];\n    t"]],"start1":170,"start2":170,"length1":25,"length2":25}]],"length":4193,"saved":false}
{"ts":1375826236495,"patch":[[{"diffs":[[0," [{x:2*16,y:"],[-1,"1"],[1,"2"],[0,"*16},{x:18*1"]],"start1":136,"start2":136,"length1":25,"length2":25},{"diffs":[[0,"18*16,y:"],[-1,"1"],[1,"2"],[0,"*16},{x:"]],"start1":157,"start2":157,"length1":17,"length2":17}]],"length":4193,"saved":false}
{"ts":1375826252544,"patch":[[{"diffs":[[0,"s = [{x:"],[-1,"2"],[1,"6"],[0,"*16,y:2*"]],"start1":133,"start2":133,"length1":17,"length2":17},{"diffs":[[0,",{x:"],[-1,"34"],[1,"28"],[0,"*16,"]],"start1":170,"start2":170,"length1":10,"length2":10}]],"length":4193,"saved":false}
{"ts":1375826400757,"patch":[[{"diffs":[[0,"s = [{x:"],[-1,"6"],[1,"4"],[0,"*16,y:2*"]],"start1":133,"start2":133,"length1":17,"length2":17}]],"length":4193,"saved":false}
{"ts":1375826406408,"patch":[[{"diffs":[[0,"16},{x:2"],[-1,"8"],[1,"6"],[0,"*16,y:2*"]],"start1":167,"start2":167,"length1":17,"length2":17}]],"length":4193,"saved":false}
{"ts":1375826549248,"patch":[[{"diffs":[[0,"16},{x:2"],[-1,"6"],[1,"8"],[0,"*16,y:2*"]],"start1":167,"start2":167,"length1":17,"length2":17}]],"length":4193,"saved":false}
{"ts":1375826557842,"patch":[[{"diffs":[[0,"16},{x:1"],[-1,"8"],[1,"6"],[0,"*16,y:2*"]],"start1":150,"start2":150,"length1":17,"length2":17}]],"length":4193,"saved":false}
{"ts":1375836034087,"patch":[[{"diffs":[[0,"d = "],[-1,"3.0"],[1,"2.7"],[0,";   "]],"start1":2052,"start2":2052,"length1":11,"length2":11}]],"length":4193,"saved":false}
{"ts":1375845389306,"patch":[[{"diffs":[[0,"awn;\n    }\n    \n"],[1,"    this.allEnemiesDead = function(){\n        re\n    }\n    \n"],[0,"    this.setColl"]],"start1":1540,"start2":1540,"length1":32,"length2":92}]],"length":4253,"saved":false}
{"ts":1375845391190,"patch":[[{"diffs":[[0,"      re"],[1,"turn false;"],[0,"\n    }\n "]],"start1":1596,"start2":1596,"length1":16,"length2":27}]],"length":4264,"saved":false}
{"ts":1375845432324,"patch":[[{"diffs":[[0,"    "],[-1,"return false"],[1,"    this.queue = [];\n    this.enemies = [];\n        return (this.queue.length===0 && this.enemies.length===0)"],[0,";\n  "]],"start1":1598,"start2":1598,"length1":20,"length2":117}]],"length":4361,"saved":false}
{"ts":1375845436182,"patch":[[{"diffs":[[0,"(){\n"],[-1,"            this.queue = [];\n    this.enemies = [];\n"],[0,"    "]],"start1":1590,"start2":1590,"length1":60,"length2":8}]],"length":4309,"saved":false}
{"ts":1375846122974,"patch":[[{"diffs":[[0,"        "],[-1,"return"],[1,"var enemiesDead = "],[0," (this.q"]],"start1":1594,"start2":1594,"length1":22,"length2":34},{"diffs":[[0,"h===0);\n"],[1,"        if (enemiesDead){\n             clearInterval(this.intervalId);\n        }\n"],[0,"    }\n  "]],"start1":1665,"start2":1665,"length1":16,"length2":97}]],"length":4402,"saved":false}
