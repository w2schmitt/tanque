{"ts":1375502996085,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n\n\nfunction sketchProc(processing) {\n     // it does not seem to work\n    /* @pjs preload=\"cenary.png,player_sprites.png\";crips=\"true\"; */\n   \n    with(processing){  // haha <--- Don't use with... CHUPA  \n\n        //var IA ;\n        //var collision;\n\n        // initialize variables (called at start)\n        processing.setup = function (){\n            \n            var resolution = {x:640,y:480}; // 20x15 tiles\n            processing.size(resolution.x,resolution.y);   \n            processing.frameRate(30);\n            \n            // Spawner\n            var enemySpawner = new Spawner();\n            enemySpawner.addEnemyList([\"4\",\"2\",\"3\",\"4\",\"4\",\"3\",\"2\",\"3\",\"1\",\"2\",\"4\",\"1\"]);\n            \n            \n            //item Spawner\n            mItemSpawner = new itemSpawner();\n            \n            // Collision\n            collision = new Collision();   \n            \n            enemySpawner.setCollision(collision);\n            \n            // Players\n            players = [new Player()]; //, new Player(), new Player()];\n            enemies = enemySpawner.enemies;\n            //enemies = [];\n            \n            // Maps\n            map1 = new Map(resolution.x, resolution.y);      \n            \n            var grass = new Tile(\"GRASS\", {x:16,y:16});\n                // Tiles creation\n            var brick = new Tile(\"BRICK\", {x:8,y:8} );\n            brick.setSubTiles([\"BRICK_UPPER_LEFT\", \"BRICK_UPPER_RIGHT\", \"BRICK_LOWER_LEFT\", \"BRICK_LOWER_RIGHT\"]);\n            brick.setIsBreakable(true);\n            \n            var steel = new Tile(\"STEEL\",{x:16,y:16});\n            var water = new Tile(\"WATER\",{x:16,y:16});\n            water.bulletPassThrough = true;\n            \n            var grass = new Tile(\"GRASS\", {x:16,y:16});\n            grass.bulletPassThrough = true;\n            grass.hasCollider = false;\n            grass.postRendered = true;\n           \n           var snow = new Tile(\"SNOW\", {x:16,y:16});\n           snow.bulletPassThrough = true;\n           snow.hasCollider = false;\n            \n            var gray = new Tile(\"GRAY\", {x:16,y:16});\n            \n              \n            // pass the created tiles and setup map\n            map1.createTile(brick, steel, water, grass, snow, gray);\n            map1.createMap();\n            \n\n            // build scenary            \n           \n            map1.drawRows([\"BRICK\"], 16,27);\n            map1.drawRows([\"GRASS\",\"GRASS\", \"BRICK\", \"BRICK\"],12,13, 23,24);\n\n            //map1.drawRows([\"STEEL\"], 0,29);\n            //map1.drawCols([\"STEEL\"], 0,39);\n\n            map1.drawIntervals('V',[\"WATER\", \"GRASS\", \"STEEL\"], [6,7, 10,11], [6,9], [11,20], [23,25]);\n            map1.drawIntervals('H',[\"WATER\"], [6,7], [12,20], [11,20], [23,27]);\n            \n            map1.drawRects([\"SNOW\"], [32,14,5,9], [8,14,2,9]);\n            \n           \n            map1.drawPattern([[\"STEEL\",\"GRASS\",\"GRASS\",\"STEEL\"],\n                              [\"STEEL\",\"GRASS\",\"GRASS\",\"STEEL\"]], 18,18);\n                              \n            map1.drawCols([\"GRAY\"], 0,1,36,37,38,39);\n            map1.drawRows([\"GRAY\"], 0,29);\n            /*           \n            map1.setTile(WATER,27,38);\n            */\n            \n            // after the map is complete, create the colliders\n            map1.createColliderForTiles(collision);\n            \n            // create static colliders for the selected tiles\n            //map1.createColliderForTiles(collision, [\"BRICK_UPPER_LEFT\", \"BRICK_UPPER_RIGHT\", \"BRICK_LOWER_LEFT\", \"BRICK_LOWER_RIGHT\", \"STEEL\", \"WATER1\", \"WATER2\", \"WATER\"]);\n            // ----\n            \n                       // sprites\n            playerSpriteSheet = new SpriteSheet(loadImage(\"player_all.png\"));\n            enemySpriteSheet = new SpriteSheet(loadImage(\"enemies1.png\"));\n            mapSpriteSheet = new SpriteSheet(loadImage(\"cenary.png\"));\n            itemSpriteSheet = new SpriteSheet(loadImage(\"items.png\"));\n            guiSpriteSheet = new SpriteSheet(loadImage(\"gui.png\"));\n            //mapSpriteSheet8x8 = new SpriteSheet(loadImage(\"cenary.png\"));\n            \n            //players[0].spriteSheet = playerSpriteSheet;\n            shootallImg = loadImage(\"shoot-all.png\");\n            shootSpriteSheet = new SpriteSheet(shootallImg);\n            explosionSpriteSheet = new SpriteSheet(shootallImg); // variavel global explosionSpriteSheet declarada em explosion.js\n            //explosion32SpriteSheet = new SpriteSheet(shootallImg);\n            \n            \n            //var explosionTest = new Explosion(6*32,4*32,explosionSpriteSheet, \"Big\");\n            //setting player sprites.. dorgas mano\n            for (var i in players){\n                //players[i].setSpriteSheets(playerSpriteSheet,shootSpriteSheet,explosionSpriteSheet,playerSpriteSheet );\n                players[i].spriteSheet = playerSpriteSheet;\n                players[i].explosionSpritesheet = explosionSpriteSheet;\n                players[i].bulletSpriteSheet = shootSpriteSheet;\n                players[i].spawnSpriteSheet = playerSpriteSheet;\n            }\n            \n            \n            mItemSpawner.setSpriteSheets(itemSpriteSheet);//shootSpriteSheet, explosionSs(itemSpriteSheet);\n            mItemSpawner.setCollision(collision);\n            \n            enemySpawner.setSpriteSheets(enemySpriteSheet, shootSpriteSheet, explosionSpriteSheet, playerSpriteSheet);\n            map1.spriteSheet = mapSpriteSheet;\n            //map1.spriteSheet8x8 = mapSpriteSheet8x8;\n            \n            cenarySprite = loadImage(\"cenary.png\");             \n            tileSprites = {};\n            \n            // MAP\n           \n            \n            \n            // CREATE AN INPUT AND ATTACH IT TO PLAYER 1 <<<<<<<<<<<<<<<<<-----------------------------------------------------------------------------------------\n            var input = new Input();\n            // list of actions this input can map\n            input.setActions( new Enum(\"up\",\"down\", \"left\", \"right\" , \"fire\") );  \n            // add attributes that are modified by certain keys according to the binding functions\n            input.setKeyAttributes({x:0,y:0,fire:false});\n            \n            //creating keymap. It associates keycodes with actions. \n            //Primary                                         //Secondary\n            with(input){\n                input.setSpecialKey(UP,    actions.up);        input.setKey(\"W\", actions.up);\n                input.setSpecialKey(DOWN,  actions.down);      input.setKey(\"S\", actions.down);\n                input.setSpecialKey(RIGHT, actions.right);     input.setKey(\"D\", actions.right);\n                input.setSpecialKey(LEFT,  actions.left);      input.setKey(\"A\", actions.left);\n                input.setSpecialKey(ENTER, actions.fire);      input.setKey(\" \", actions.fire);\n                \n                //Keybindings are the functions that are called ONCE on PHYSICAL key press (With no repeat from the OS) AND key release\n                //pressed = true -> key pressed; pressed = false -> key released\n                input.setBindingFunc(actions.up,    function(input,pressed){ input.keyAttribute.y -= pressed ? 1 : -1; });\n                input.setBindingFunc(actions.down,  function(input,pressed){ input.keyAttribute.y += pressed ? 1 : -1; });\n                input.setBindingFunc(actions.left,  function(input,pressed){ input.keyAttribute.x -= pressed ? 1 : -1; });\n                input.setBindingFunc(actions.right, function(input,pressed){ input.keyAttribute.x += pressed ? 1 : -1; });\n                input.setBindingFunc(actions.fire,  function(input,pressed){ input.keyAttribute.fire = pressed; });\n            }\n            \n\n            //clone will NOT copy the keyMap\n            var IA = input.clone();\n            enemySpawner.setIAInput(IA);\n            /*\n            with (input2){\n                //set player2 keys:\n                setKey(\"I\", actions.up);\n                setKey(\"K\", actions.down);\n                setKey(\"L\", actions.right);\n                setKey(\"J\", actions.left);\n                setKey(\"P\", actions.fire);\n       }*/\n            players[0].setInput(input);  \n            players[0].spawningPos = {x:16*20, y:16*25};\n            \n            for (var p in players){\n                players[p].createCollider(collision);\n            }\n\n        }; // end setup\n         \n    \n    \n      // Override draw function, by default it will be called 60 times per second\n    //var tileSpritesCreated = false;\n    processing.draw = function() {\n        with (this){\n            var allEntities = players.concat(enemies);\n            \n            \n            //yes, it is safe to call this method in the loop, it will check if its already loaded\n            if (playerSpriteSheet.loaded()){\n                if (!playerSpriteSheet.initialized){\n                    playerSpriteSheet.createSprites(32,32, 8,9);\n                    playerSpriteSheet.setRectSprites( [0,1,8,1], 32,32, [\"playerUp1\", \"playerRight1\",\"playerDown1\",\"playerLeft1\", \"playerUp2\", \"playerRight2\",\"playerDown2\",\"playerLeft2\"]);    //player1 - frame1 e frame2\n                                    \n                    playerSpriteSheet.setRectSprites( [4,0,4,1], 32,32, [\"spawn1\", \"spawn2\", \"spawn3\", \"spawn4\"]);\n                    playerSpriteSheet.setRectSprites( [0,0,2,1], 32,32, [\"shield1\", \"shield2\"]);\n                    \n                    playerSpriteSheet.setAnimation([\"playerUp1\",\"playerUp2\"],\"player1Up\",15);\n                    playerSpriteSheet.setAnimation([\"playerRight1\",\"playerRight2\"],\"player1Right\",15);\n                    playerSpriteSheet.setAnimation([\"playerDown1\",\"playerDown2\"],\"player1Down\",15); \n                    playerSpriteSheet.setAnimation([\"playerLeft1\",\"playerLeft2\"],\"player1Left\",15); \n                    \n                    playerSpriteSheet.setAnimation([\"shield1\", \"shield2\"], \"shield\", 25);\n                    \n                    playerSpriteSheet.setAnimation([\"spawn4\",\"spawn3\",\"spawn2\",\"spawn1\",\"spawn2\",\"spawn3\",\"spawn4\",\n                                                    \"spawn3\",\"spawn2\",\"spawn1\",\"spawn2\",\"spawn3\",\"spawn4\"],\"spawn\",15);\n                }\n            }else return false;\n            \n            if (enemySpriteSheet.loaded()){\n                if (!enemySpriteSheet.initialized){\n                    enemySpriteSheet.createSprites(32,32, 16,7);                    \n                           \n                    var t=1;\n                    // animation for all the enemies\n                    for (var i=1; i<=7; i++){                        \n                        if (t>3) t++;\n                        enemySpriteSheet.setRectSprites( [0,i-1,8,1], 32,32, [\"enemy\"+i+\"Up1\", \"enemy\"+i+\"Right1\",\"enemy\"+i+\"Down1\",\"enemy\"+i+\"Left1\", \"enemy\"+i+\"Up2\", \"enemy\"+i+\"Right2\",\"enemy\"+i+\"Down2\",\"enemy\"+i+\"Left2\"]);\n                        enemySpriteSheet.setAnimation([\"enemy\"+i+\"Up1\",\"enemy\"+i+\"Up2\"],\"enemy\"+i+\"Up\",15);\n                        enemySpriteSheet.setAnimation([\"enemy\"+i+\"Right1\",\"enemy\"+i+\"Right2\"],\"enemy\"+i+\"Right\",15);\n                        enemySpriteSheet.setAnimation([\"enemy\"+i+\"Down1\",\"enemy\"+i+\"Down2\"],\"enemy\"+i+\"Down\",15); \n                        enemySpriteSheet.setAnimation([\"enemy\"+i+\"Left1\",\"enemy\"+i+\"Left2\"],\"enemy\"+i+\"Left\",15); \n                    }\n                }\n            } else return false;\n                            \n            if (mapSpriteSheet.loaded()){\n                if (!mapSpriteSheet.initialized){\n                    mapSpriteSheet.createSprites(16,16, 8,1);\n                    mapSpriteSheet.setRectSprites([0,0,8,1], 16,16, [\"NONE16\", \"BRICK\", \"STEEL\", \"GRASS\", \"WATER1\", \"WATER2\", \"SNOW\", \"GRAY\"]);\n                    mapSpriteSheet.setAnimation([\"WATER1\",\"WATER2\"],\"WATER\",1.2);\n                    \n                    //mapSpriteSheet.createSprites(8,8, 2,2);                   \n                    //mapSpriteSheet.setRectSprites([0,1,0,1], 8,8, [\"BRICK_UPPER_LEFT\", \"BRICK_UPPER_RIGHT\", \"BRICK_BOTTOM_LEFT\", \"BRICK_BOTTOM_RIGHT\"]);      \n                    \n                    mapSpriteSheet.createSprites(8,8, 4,2);                   \n                    mapSpriteSheet.setRectSprites([2,0,2,2], 8,8, [\"BRICK_UPPER_LEFT\", \"BRICK_UPPER_RIGHT\", \"BRICK_LOWER_LEFT\", \"BRICK_LOWER_RIGHT\"]);        \n                    mapSpriteSheet.setRectSprites([0,0,1,1], 8,8, [\"NONE\"]);\n                    \n                    //mapSpriteSheet.createSprites(8,8,1,1);\n                    //mapSpriteSheet.setRectSprites([0,0,0,0], 8,8, [\"NONE\"]);   \n                }\n            }else return false;\n\n           if (itemSpriteSheet.loaded()){\n                if (!itemSpriteSheet.initialized){\n                    itemSpriteSheet.createSprites(32,32, 7,1 );\n                    itemSpriteSheet.setRectSprites([0,0,7,1],32,32, [\"i0\",\"i1\",\"i2\",\"i3\",\"i4\",\"i5\", \"blank\"]);\n                    \n                    itemSpriteSheet.setAnimation([\"i0\", \"blank\"], \"item0\", 3);\n                    itemSpriteSheet.setAnimation([\"i1\", \"blank\"], \"item1\", 3);\n                    itemSpriteSheet.setAnimation([\"i2\", \"blank\"], \"item2\", 3);\n                    itemSpriteSheet.setAnimation([\"i3\", \"blank\"], \"item3\", 3);\n                    itemSpriteSheet.setAnimation([\"i4\", \"blank\"], \"item4\", 3);\n                    itemSpriteSheet.setAnimation([\"i5\", \"blank\"], \"item5\", 3);\n                }                \n            }else return false;\n            \n            if (guiSpriteSheet.loaded()){\n                if (!guiSpriteSheet.initialized){\n                    guiSpriteSheet.createSprites(16,16, 1, 2);\n                    guiSpriteSheet.setRectSprites([0,0,1,2],16,16, [\"enemyIcon\",\"playerIcon\"]);\n                    \n                    guiSpriteSheet.createSprites(32,32, 1, 1, 16, 0);\n                    guiSpriteSheet.setRectSprites([0,0,1,1],32,32, [\"flagIcon\"]);\n                    \n                }\n            }\n            \n            \n            if (shootSpriteSheet.loaded()){\n                if (!shootSpriteSheet.initialized){\n                    shootSpriteSheet.createSprites(16,16, 4,1 );\n                    shootSpriteSheet.setRectSprites([0,0,4,1],16,16, [\"bulletUp\",\"bulletLeft\",\"bulletRight\",\"bulletDown\"]);\n                }                \n            }else return false;\n            //nao rpecisa mais dar upodate nso spreadSHITs pra animar os sprites :) funciona por mágica agora\n            //playerSpriteSheet.update();\n            \n            \n            \n            if(explosionSpriteSheet.loaded()){\n                if (!explosionSpriteSheet.initialized){\n                    explosionSpriteSheet.createSprites(32,32, 3,1,16*4,0); //offset inicial pra n pegar as bullets\n                    explosionSpriteSheet.setRectSprites( [0,0,3,1], 32,32, [\"explosionSmall1\", \"explosionSmall2\", \"explosionSmall3\"]);\n                    \n                    explosionSpriteSheet.createSprites(64,64, 3,1,16*4 + 32*3,0); //offset inicial pra n pegar as bullets e explosoes pequenas\n                    explosionSpriteSheet.setRectSprites( [0,0,2,1], 64,64, [\"explosionBig1\", \"explosionBig2\"]);\n                    \n                    \n                    explosionSpriteSheet.setAnimation([\"explosionSmall1\",\"explosionSmall2\",\"explosionSmall3\"],\"explosionSmall\",15, false);\n                    explosionSpriteSheet.setAnimation([\"explosionSmall1\",\"explosionSmall2\",\"explosionSmall3\", //small start\n                                                        \"explosionBig1\", \"explosionBig2\"  ,\"explosionSmall3\"], //small end\n                                            \"explosionBig\",15,false);\n                \n                \n                }\n            }else return false;\n            \n            for (var e in enemies){\n                \n                var IA = enemies[e].input;\n                //IA MTO BOA:\n                if (random(25) < 1){\n                    IA.value.x = Math.floor(random(3)) -1;\n                }\n                if (random(20) < 1){\n                    IA.value.y = Math.floor(random(3)) -1;\n                }\n                \n                if (random(20) < 1){\n                    IA.value.y = Math.floor(random(3)) -1;\n                }\n                IA.value.fire = (Math.floor(random(3)) == 0);\n            }\n            \n            //item random em momento random\n            if (random(60 ) < 1){\n                mItemSpawner.spawnItem();\n            }\n           \n            \n            //update player position\n            //do a tree node hierarchy in the future (wut? não consegui gravar)\n            for (var p in allEntities){\n                allEntities[p].update();\n            }\n            \n          \n                  \n                      \n            collision.computeCollisions();\n            \n            \n            // erase background\n            processing.background(0);\n            \n            \n            \n            \n            // draw map\n            map1.drawMap(processing);\n\n            //draw items:\n            for(var i in mItemSpawner.allItems){\n                var item = mItemSpawner.allItems[i];\n                item.update();\n                 if (item.currentSprite != null){\n                    image(item.currentSprite, item.pos.x, item.pos.y); \n                }\n            }\n             \n            for (var i in allEntities){\n                var p = allEntities[i];   \n                if (!p.isDead){\n                    image(p.currentSprite, p.pos.x, p.pos.y); \n                                    if (p.shieldSprite !== null)\n        image(p.shieldSprite, p.pos.x, p.pos.y); \n                }\n                     // draw players bullets\n                for (var b in p.bullets){\n                    b = p.bullets[b];\n                    image(b.currentSprite, b.pos.x, b.pos.y);\n                }\n                 }\n            \n            //draw explosions\n            for (var i in allExplosions){\n                imageMode(CENTER);\n                var e = allExplosions[i];\n                e.update();\n                if (e.currentSprite != null){\n                    image(e.currentSprite, e.pos.x, e.pos.y); \n                }\n                imageMode(CORNER);\n            }\n            \n            //remove the explosions that have to be removed\n            for (var i = 0; i < allExplosions.length ; i++){\n                 var e = allExplosions[i];\n                 if (e.remove){\n                     delete allExplosions[i];\n                     allExplosions.splice(i,1);\n                     i--;\n                 } \n            }\n            \n            //draw map (processing need to use image function)\n            map1.postDrawMap(processing);\n\n            \n            // DEBUG MODE FOR COLLIDERS\n            //collision.drawAllColliders(processing);\n        }\n      };\n    \n    \n        \n        \n        processing.keyPressed = function(){ \n          var all = players.concat(enemies);\n          for(var p in all){              \n              input = all[p].input;\n              if (input.keymap[keyCode] != null && !input.inputPressed[input.keymap[keyCode]]){\n                input.inputPressed[input.keymap[keyCode]] = true;\n                input.keybindings[input.keymap[keyCode]].apply(this,[input,true]);\n            }              \n          }\n               \n        };\n        \n        processing.keyReleased = function(){ \n            var all = players.concat(enemies);\n            for(var p in all){\n                input = all[p].input;\n                if (input.keymap[keyCode] != null && input.inputPressed[input.keymap[keyCode]]){\n                    input.inputPressed[input.keymap[keyCode]] = false;\n                    input.keybindings[input.keymap[keyCode]].apply(this,[input,false]);\n                }\n            } \n        };\n        \n    } //with processing\n}\n\n\nvar canvas = document.getElementById(\"lixo\");\n// attaching the sketchProc function to the canvas\nvar processingInstance = new Processing(canvas, sketchProc);\n\n\n"]],"start1":0,"start2":0,"length1":0,"length2":19954}]],"length":19954}
{"contributors":[],"silentsave":false,"ts":1375503363883,"patch":[[{"diffs":[[0,");\n            \n"],[1,"\t\t\tconsole.log(\"testando github\");\n\t\t\t\n"],[0,"            // S"]],"start1":507,"start2":507,"length1":32,"length2":71}]],"length":19993,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375744921855,"patch":[[{"diffs":[[0,"  //"],[-1,"var IA ;\n        //var collision;\n\n        //"],[1,""],[0," ini"]],"start1":212,"start2":212,"length1":53,"length2":8},{"diffs":[[0,"   \n"],[-1,"\t\t\tconsole.log(\"testando github\");\n\t\t\t\n            // Spawner\n            var enemySpawner = new Spawner"],[1,"            // Collision\n            collision = new Collision();   \n\n            // Game GUI\n\t\t\tgMenu = new GameMenu"],[0,"();\n"],[1,"\n"],[0,"    "]],"start1":474,"start2":474,"length1":116,"length2":130},{"diffs":[[0,"    "],[-1,"enemySpawner.addEnemyList([\"4\",\"2\",\"3\",\"4\",\"4\",\"3\",\"2\",\"3\",\"1\",\"2\",\"4\",\"1\"]);\n            \n            \n            //item Spawner\n            mItemSpawner = new itemSpawner();\n            \n            // Collision\n            collision = new Collision();   \n            \n            enemySpawner.setCollision(collision);\n            \n            // Players\n            players = [new Player()]; //, new Player(), new Player()];"],[1,"//general Flag\n            baseFlag = new General();\n            baseFlag.setCollision(collision);\n\n            //item Spawner\n            mItemSpawner = new itemSpawner();\n            mItemSpawner.setCollision(collision);            \n\t\t\t\n            // Spawners\n            enemySpawner = new Spawner();\n            enemySpawner.setCollision(collision);\n            enemySpawner.setItemSpawner(mItemSpawner);\n            //normal tanks 1 to 4, special tanks 5 to 8"],[0,"\n   "]],"start1":608,"start2":608,"length1":436,"length2":473},{"diffs":[[0,"    "],[-1," enemies ="],[0," ene"]],"start1":1085,"start2":1085,"length1":18,"length2":8},{"diffs":[[0,"ner."],[-1,"enemies;\n            //enemies = [];\n            \n            // Maps\n            map1 = new Map(resolution.x, resolution.y);      \n            \n            var grass = new Tile(\"GRASS\", {x:16,y:16});\n    "],[1,"addEnemyList([1,1,2,5,1,  4,3,3,2,7,  4,4,1,1,3,  1,1,8,4,4]);\n\n            // Players\n            players = [new Player()];\n            players[0].spawningPos = {x:16*15, y:16*27};\n            for (var p in players){players[p].setCollisionInstance(collision);}\n            \n            enemies = enemySpawner.enemies; // create alias array for the enemy spanwer enemies\n            \n              \n"],[0,"    "]],"start1":1099,"start2":1099,"length1":213,"length2":407},{"diffs":[[0,"  //"],[1," Map"],[0," Tiles"],[-1," creation"],[0,"\n   "]],"start1":1512,"start2":1512,"length1":23,"length2":18},{"diffs":[[0,"\",{x:16,y:16});\n"],[1,"\n"],[0,"            var "]],"start1":1789,"start2":1789,"length1":32,"length2":33},{"diffs":[[0,"\n           "],[1," "],[0,"var snow = n"]],"start1":2107,"start2":2107,"length1":24,"length2":25},{"diffs":[[0,"\n           "],[1," "],[0,"snow.bulletP"]],"start1":2161,"start2":2161,"length1":24,"length2":25},{"diffs":[[0,"Through = true;\n"],[1," "],[0,"           snow."]],"start1":2189,"start2":2189,"length1":32,"length2":33},{"diffs":[[0,"      //"],[1," create map and"],[0," pass th"]],"start1":2344,"start2":2344,"length1":16,"length2":31},{"diffs":[[0,"iles"],[-1," and setup map"],[1,"\n            map1 = new Map(resolution.x, resolution.y);\n            map1.setCollisionInstance(collision);"],[0,"\n   "]],"start1":2386,"start2":2386,"length1":22,"length2":114},{"diffs":[[0,"scenary "],[-1,"           \n           "],[0,"\n       "]],"start1":2631,"start2":2631,"length1":39,"length2":16},{"diffs":[[0,"CK\"], 16"],[-1,",27"],[0,");\n     "]],"start1":2671,"start2":2671,"length1":19,"length2":16},{"diffs":[[0,");\n\n"],[-1,"            //map1.drawRows([\"STEEL\"], 0,29);\n            //map1.drawCols([\"STEEL\"], 0,39);\n\n"],[0,"    "]],"start1":2756,"start2":2756,"length1":101,"length2":8},{"diffs":[[0,"s('H',[\""],[-1,"WATER"],[1,"STEEL"],[0,"\"], [6,7"]],"start1":2893,"start2":2893,"length1":21,"length2":21},{"diffs":[[0,"[12,20],"],[-1," [11,20],"],[0," [23,27]"]],"start1":2917,"start2":2917,"length1":25,"length2":16},{"diffs":[[0,"]);\n"],[-1,"            \n           \n"],[0,"    "]],"start1":3008,"start2":3008,"length1":33,"length2":8},{"diffs":[[0,"ap1."],[-1,"drawCols([\"GRAY\"], 0,1,36,37,38,39);\n            map1.drawRows([\"GRAY\"], 0,29);\n            /*           \n            map1.setTile(WATER,27,38);\n            */\n            \n            // after the map is complete, create the colliders\n            map1.createColliderForTiles(collision);\n            \n            // create static colliders for the selected tiles\n            //map1.createColliderForTiles(collision, [\"BRICK_UPPER_LEFT\", \"BRICK_UPPER_RIGHT\", \"BRICK_LOWER_LEFT\", \"BRICK_LOWER_RIGHT\", \"STEEL\", \"WATER1\", \"WATER2\", \"WATER\"]"],[1,"DoneBuilding("],[0,");\n "]],"start1":3195,"start2":3195,"length1":544,"length2":21},{"diffs":[[0,"    "],[-1,"// ----"],[0,"\n   "]],"start1":3223,"start2":3223,"length1":15,"length2":8},{"diffs":[[0,"    "],[-1,"\n                       "],[0,"// s"]],"start1":3236,"start2":3236,"length1":32,"length2":8},{"diffs":[[0,"));\n"],[-1,"            //mapSpriteSheet8x8 = new SpriteSheet(loadImage(\"cenary.png\"));\n            \n            //players[0].spriteSheet = playerSpriteSheet;\n"],[0,"    "]],"start1":3610,"start2":3610,"length1":155,"length2":8},{"diffs":[[0,"osion.js"],[-1,"\n"],[0,"        "]],"start1":3851,"start2":3851,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1," //explosion32SpriteSheet = new SpriteSheet(shootallImg);\n            \n            \n            //var explosionTest = new Explosion(6*32,4*32,explosionSpriteSheet, \"Big\");\n            //setting player sprites.. dorgas mano\n            for (var i in players){\n                //players[i].setSpriteSheets(playerSpriteSheet,shootSpriteSheet,explosionSpriteSheet,playerSpriteSheet );"],[1,"\n            \n            //setting player sprites.. dorgas mano\n            for (var i in players){"],[0,"\n   "]],"start1":3866,"start2":3866,"length1":388,"length2":108},{"diffs":[[0,"           }"],[-1,"\n          "],[0,"  \n         "]],"start1":4234,"start2":4234,"length1":35,"length2":24},{"diffs":[[0,"    "],[-1,"\n            mItemSpawner.setSpriteSheets(itemSpriteSheet);//shootSpriteSheet, explosionSs(item"],[1,"gMenu.setSpriteSheet(gui"],[0,"Spri"]],"start1":4257,"start2":4257,"length1":103,"length2":32},{"diffs":[[0,".set"],[-1,"Collision(collision);\n         "],[1,"SpriteSheets(itemSpriteSheet);"],[0,"   \n"]],"start1":4323,"start2":4323,"length1":39,"length2":38},{"diffs":[[0,"      map1.s"],[1,"etS"],[0,"priteSheet ="]],"start1":4486,"start2":4486,"length1":24,"length2":27},{"diffs":[[0,"iteSheet"],[-1," = "],[1,"s("],[0,"mapSprit"]],"start1":4503,"start2":4503,"length1":19,"length2":18},{"diffs":[[0,"s(mapSpriteSheet"],[1,")"],[0,";\n            //"]],"start1":4511,"start2":4511,"length1":32,"length2":33},{"diffs":[[0,"    "],[-1,"//map1.s"],[1,"baseFlag.setS"],[0,"prit"]],"start1":4538,"start2":4538,"length1":16,"length2":21},{"diffs":[[0,"heet"],[-1,"8x8 = map"],[1,"(player"],[0,"Spri"]],"start1":4561,"start2":4561,"length1":17,"length2":15},{"diffs":[[0,"heet"],[-1,"8x8;\n            \n            cenarySprite = loadImage(\"cenary.png\");             \n            tileSprites = {};\n            \n            // MAP\n           \n            \n            \n            // CREATE AN INPUT AND ATTACH IT TO PLAYER 1 <<<<<<<<<<<<<<<<<-----------------------------------------------------------------------------------------"],[1,");\n            baseFlag.setExplosionSpriteSheet(explosionSpriteSheet);\n            \n            \n            // Create Input for players and IA"],[0,"\n   "]],"start1":4579,"start2":4579,"length1":354,"length2":151},{"diffs":[[0," }\n            \n"],[-1,"\n"],[0,"            //cl"]],"start1":6567,"start2":6567,"length1":33,"length2":32},{"diffs":[[0,");\n "],[-1,"           /*\n            with (input2){\n                //set player2 keys:\n                setKey(\"I\", actions.up);\n                setKey(\"K\", actions.down);\n                setKey(\"L\", actions.right);\n                setKey(\"J\", actions.left);\n                setKey(\"P\", actions.fire);\n       }*/\n            players[0].setInput(input);  \n            players[0].spawningPos = {x:16*20, y:16*25};\n            \n            for (var p in players){\n                players[p].createCollider(collision);\n            }\n"],[1,"\n            players[0].setInput(input);  \n\n            mItemSpawner.setMapInstance(map1);\n            mItemSpawner.setEnemySpawnerInstance(enemySpawner);\n\n            mItemSpawner.spawnItem();"],[0,"\n   "]],"start1":6702,"start2":6702,"length1":526,"length2":201},{"diffs":[[0," \n    \n    \n"],[-1,"  "],[0,"    // Overr"]],"start1":6932,"start2":6932,"length1":26,"length2":24},{"diffs":[[0,"ond\n"],[-1,"    //var tileSpritesCreated = false;\n"],[0,"    "]],"start1":7020,"start2":7020,"length1":46,"length2":8},{"diffs":[[0,"ith (this){\n"],[1,"            // create an array containing enemies and players\n"],[0,"            "]],"start1":7068,"start2":7068,"length1":24,"length2":86},{"diffs":[[0,"concat(enemies);"],[1," "],[0,"\n            \n  "]],"start1":7180,"start2":7180,"length1":32,"length2":33},{"diffs":[[0,"); \n            "],[1,"gMenu.setNumberOfEnemies(enemySpawner.totalEnemies);           "],[0,"\n            \n  "]],"start1":7194,"start2":7194,"length1":32,"length2":95},{"diffs":[[0,"shield2\"]);\n"],[1,"                    playerSpriteSheet.setRectSprites( [2,0,2,1], 32,32, [\"generalAlive\", \"generalDead\"]);\n"],[0,"            "]],"start1":8006,"start2":8006,"length1":24,"length2":130},{"diffs":[[0,"ion for "],[1,"norm"],[0,"a"],[-1,"l"],[0,"l the en"]],"start1":9242,"start2":9242,"length1":18,"length2":21},{"diffs":[[0,"+\"Left2\"]);\n"],[1,"                        if (i<5) {\n                            enemySpriteSheet.setRectSprites( [8,i-1,8,1], 32,32, [\"specialenemy\"+i+\"Up1\", \"specialenemy\"+i+\"Right1\",\"specialenemy\"+i+\"Down1\",\"specialenemy\"+i+\"Left1\", \"specialenemy\"+i+\"Up2\", \"specialenemy\"+i+\"Right2\",\"specialenemy\"+i+\"Down2\",\"specialenemy\"+i+\"Left2\"]);\n    "],[0,"            "]],"start1":9591,"start2":9591,"length1":24,"length2":349},{"diffs":[[0,"+i+\"Up1\""],[-1,",\""],[1,"    ,\"special"],[0,"enemy\"+i"]],"start1":9990,"start2":9990,"length1":18,"length2":29},{"diffs":[[0,"Up2\""],[-1,"],\"enemy\"+i+\"Up\""],[1,"   , \"enemy\"+i+\"Up1\"    , \"specialenemy\"+i+\"Up2\"   ], \"specialenemy\"+i+\"Up\"    ,10);\n                            enemySpriteSheet.setAnimation([\"enemy\"+i+\"Right1\" ,\"specialenemy\"+i+\"Right2\", \"enemy\"+i+\"Right1\" , \"specialenemy\"+i+\"Right2\"], \"specialenemy\"+i+\"Right\" ,10);\n                            enemySpriteSheet.setAnimation([\"enemy\"+i+\"Down1\"  ,\"specialenemy\"+i+\"Down2\" , \"enemy\"+i+\"Down1\"  , \"specialenemy\"+i+\"Down2\" ], \"specialenemy\"+i+\"Down\"  ,10); \n                            enemySpriteSheet.setAnimation([\"enemy\"+i+\"Left1\"  ,\"specialenemy\"+i+\"Left2\" , \"enemy\"+i+\"Left1\"  , \"specialenemy\"+i+\"Left2\" ], \"specialenemy\"+i+\"Left\"  ,10); \n                        }\n\n                        enemySpriteSheet.setAnimation([\"enemy\"+i+\"Up1\"    ,\"enemy\"+i+\"Up2\"   ] ,\"enemy\"+i+\"Up\"    "],[0,",15)"]],"start1":10021,"start2":10021,"length1":24,"length2":794},{"diffs":[[0,"nemy\"+i+\"Right1\""],[1," "],[0,",\"enemy\"+i+\"Righ"]],"start1":10874,"start2":10874,"length1":32,"length2":33},{"diffs":[[0,"+i+\"Right2\"]"],[1," "],[0,",\"enemy\"+i+\""]],"start1":10899,"start2":10899,"length1":24,"length2":25},{"diffs":[[0,"y\"+i+\"Right\""],[1," "],[0,",15);\n      "]],"start1":10918,"start2":10918,"length1":24,"length2":25},{"diffs":[[0,"enemy\"+i+\"Down1\""],[1,"  "],[0,",\"enemy\"+i+\"Down"]],"start1":10993,"start2":10993,"length1":32,"length2":34},{"diffs":[[0,"+\"Down2\""],[-1,"]"],[1," ] "],[0,",\"enemy\""]],"start1":11021,"start2":11021,"length1":17,"length2":19},{"diffs":[[0,"my\"+i+\"Down\""],[1,"  "],[0,",15); \n     "]],"start1":11037,"start2":11037,"length1":24,"length2":26},{"diffs":[[0,"+\"Left1\""],[1,"  "],[0,",\"enemy\""]],"start1":11122,"start2":11122,"length1":16,"length2":18},{"diffs":[[0,"+\"Left2\""],[-1,"]"],[1," ] "],[0,",\"enemy\""]],"start1":11142,"start2":11142,"length1":17,"length2":19},{"diffs":[[0,"my\"+i+\"Left\""],[1,"  "],[0,",15); \n     "]],"start1":11158,"start2":11158,"length1":24,"length2":26},{"diffs":[[0,"       }"],[-1," "],[1,""],[0,"else ret"]],"start1":11224,"start2":11224,"length1":17,"length2":16},{"diffs":[[0,".2);"],[-1,"\n                    \n                    //mapSpriteSheet.createSprites(8,8, 2,2);                   \n                    //mapSpriteSheet.setRectSprites([0,1,0,1], 8,8, [\"BRICK_UPPER_LEFT\", \"BRICK_UPPER_RIGHT\", \"BRICK_BOTTOM_LEFT\", \"BRICK_BOTTOM_RIGHT\"]);    "],[0,"  \n "]],"start1":11655,"start2":11655,"length1":269,"length2":8},{"diffs":[[0,"\"]);"],[-1,"\n                    \n                    //mapSpriteSheet.createSprites(8,8,1,1);\n                    //mapSpriteSheet.setRectSprites([0,0,0,0], 8,8, [\"NONE\"]);  "],[0," \n  "]],"start1":11993,"start2":11993,"length1":171,"length2":8},{"diffs":[[0,"(32,32, "],[-1,"7"],[1,"8"],[0,",1 );\n  "]],"start1":12192,"start2":12192,"length1":17,"length2":17},{"diffs":[[0,"es([0,0,"],[-1,"7"],[1,"8"],[0,",1],32,3"]],"start1":12255,"start2":12255,"length1":17,"length2":17},{"diffs":[[0,"ank\""],[-1,"]);\n                    \n                    itemSpriteSheet.setAnimation([\"i0\", \"blank\"], \"item0\", 3);\n                    itemSpriteSheet.setAnimation([\"i1\", \"blank\"], \"item1\", 3);\n                    itemSpriteSheet.setAnimation([\"i2\", \"blank\"], \"item2\", 3);\n                    itemSpriteSheet.setAnimation([\"i3\", \"blank\"], \"item3\", 3);\n"],[1,", \"500points\"]);\n                    \n                    for (var i=0; i<=5; i++){\n    "],[0,"    "]],"start1":12310,"start2":12310,"length1":349,"length2":96},{"diffs":[[0,"tion([\"i"],[-1,"4"],[0,"\""],[1,"+i"],[0,", \"blank"]],"start1":12446,"start2":12446,"length1":18,"length2":19},{"diffs":[[0,"], \"item"],[-1,"4"],[0,"\""],[1,"+i"],[0,", 3);\n  "]],"start1":12466,"start2":12466,"length1":18,"length2":19},{"diffs":[[0,"    "],[-1,"itemSpriteSheet.setAnimation([\"i5\", \"blank\"], \"item5\", 3);"],[1,"}"],[0,"\n   "]],"start1":12499,"start2":12499,"length1":66,"length2":9},{"diffs":[[0,"           }"],[-1,"\n            "],[1,"else return false;"],[0,"\n           "]],"start1":13048,"start2":13048,"length1":37,"length2":42},{"diffs":[[0,"(16,16, "],[-1,"4,1"],[1,"2,2"],[0," );\n    "]],"start1":13238,"start2":13238,"length1":19,"length2":19},{"diffs":[[0,"es([0,0,"],[-1,"4,1"],[1,"2,2"],[0,"],16,16,"]],"start1":13302,"start2":13302,"length1":19,"length2":19},{"diffs":[[0,"se;\n"],[-1,"            //nao rpecisa mais dar upodate nso spreadSHITs pra animar os sprites :) funciona por mágica agora\n            //playerSpriteSheet.update();\n            \n            \n"],[0,"    "]],"start1":13439,"start2":13439,"length1":186,"length2":8},{"diffs":[[0,"(32,32, "],[-1,"3,1"],[1,"4,2"],[0,",16*"],[-1,"4"],[1,"2"],[0,",0); //o"]],"start1":13613,"start2":13613,"length1":24,"length2":24},{"diffs":[[0,"s( [0,0,"],[-1,"3"],[1,"4"],[0,",1], 32,"]],"start1":13728,"start2":13728,"length1":17,"length2":17},{"diffs":[[0,"nSmall3\""],[1,", \"0points\"]);\n                    explosionSpriteSheet.setRectSprites( [0,1,4,1], 32,32, [\"100points\",\"200points\",\"300points\",\"400points\""],[0,"]);\n    "]],"start1":13797,"start2":13797,"length1":16,"length2":154},{"diffs":[[0,",16*"],[-1,"4"],[1,"2"],[0," + 32*"],[-1,"3"],[1,"4"],[0,",0);"]],"start1":14033,"start2":14033,"length1":16,"length2":16},{"diffs":[[0,"       \n"],[-1,"                    \n"],[0,"        "]],"start1":14236,"start2":14236,"length1":37,"length2":16},{"diffs":[[0,"                "],[-1," "],[0,"\"explosionBig1\","]],"start1":14546,"start2":14546,"length1":33,"length2":32},{"diffs":[[0,"nSmall3\""],[1,", \"0points\""],[0,"], //sma"]],"start1":14606,"start2":14606,"length1":16,"length2":27},{"diffs":[[0,"                "],[1,"           "],[0,"\"explosionBig\",1"]],"start1":14668,"start2":14668,"length1":32,"length2":43},{"diffs":[[0,"        "],[-1,"\n                "],[1,"    for (var i=1; i<=4; i++){\n                        explosionSpriteSheet.setAnimation([\"explosionSmall1\",\"explosionSmall2\",\"explosionSmall3\", //small start\n                                                            \"explosionBig1\", \"explosionBig2\"  ,\"explosionSmall3\", i*100+\"points\"], //small end\n                                                            \"explosionBig\"+i*100,15,false);\n                    }"],[0,"\n       "]],"start1":14729,"start2":14729,"length1":33,"length2":430},{"diffs":[[0,"e return false;\n"],[1,"\n"],[0,"            \n   "]],"start1":15186,"start2":15186,"length1":32,"length2":33},{"diffs":[[0,"e;\n\n            "],[1,"\n\n            // move IA"],[0,"\n            for"]],"start1":15199,"start2":15199,"length1":32,"length2":56},{"diffs":[[0,"in enemies){"],[-1,"\n"],[0,"            "]],"start1":15263,"start2":15263,"length1":25,"length2":24},{"diffs":[[0,"                "],[1,"//probability of change:\n                if (random(25) < 1){\n                    IA.value.x = 0;\n                    IA.value.y = 0;\n                    IA.value.fire = (Math.floor(random(3)) == 0);\n                     //higher probability of vertical movement \n                    if (random(10) > 1){\n                        //higher probability of going down\n                        IA.value.y = (random (10) > 1)?1:-1 \n                    }else{\n                        //same horizontam prob:\n                        IA.value.x = Math.floor(random(3)) -1;\n                    }\n                }\n                /*"],[0,"if (random(25) <"]],"start1":15365,"start2":15365,"length1":32,"length2":653},{"diffs":[[0,"               }"],[1," "],[0,"\n               "]],"start1":16083,"start2":16083,"length1":32,"length2":33},{"diffs":[[0,"       }"],[-1,"\n               "],[1,""],[0," \n      "]],"start1":16206,"start2":16206,"length1":32,"length2":16},{"diffs":[[0,"               }"],[1,"                "],[0,"\n               "]],"start1":16313,"start2":16313,"length1":32,"length2":48},{"diffs":[[0," 0);"],[-1,"\n            }\n            \n            //item random em momento random\n            if (random(60 ) < 1){\n                mItemSpawner.spawnItem();"],[1,"*/"],[0,"\n   "]],"start1":16403,"start2":16403,"length1":155,"length2":10},{"diffs":[[0,"*/\n            }"],[-1,"\n "],[0,"          \n     "]],"start1":16407,"start2":16407,"length1":34,"length2":32},{"diffs":[[0,"    "],[-1,"\n                  \n                      "],[1,"  // do the realistic physics computations"],[0,"\n   "]],"start1":16678,"start2":16678,"length1":50,"length2":50},{"diffs":[[0,"  \n            \n"],[1,"            // DRAWING COMMANDS\n"],[0,"            // e"]],"start1":16778,"start2":16778,"length1":32,"length2":64},{"diffs":[[0,"kground(0);\n"],[1,"\n"],[0,"            "]],"start1":16884,"start2":16884,"length1":24,"length2":25},{"diffs":[[0,"    "],[-1,"\n            \n            \n            "],[1,"//draw baseFlag\n            processing.image(baseFlag.getCurrentSprite(), baseFlag.pos.x, baseFlag.pos.y, 32,32);\n"],[0,"\n   "]],"start1":16905,"start2":16905,"length1":47,"length2":122},{"diffs":[[0,"ap(processing);\n"],[1,"             "],[0,"\n            //d"]],"start1":17070,"start2":17070,"length1":32,"length2":45},{"diffs":[[0,"  //"],[1," "],[0,"draw "],[-1,"items:"],[1,"player and enemies"],[0,"\n   "]],"start1":17110,"start2":17110,"length1":19,"length2":32},{"diffs":[[0,"         for"],[1," "],[0,"(var i in mI"]],"start1":17142,"start2":17142,"length1":24,"length2":25},{"diffs":[[0,"ar i in "],[-1,"mItemSpawner.allItem"],[1,"allEntitie"],[0,"s){\n    "]],"start1":17157,"start2":17157,"length1":36,"length2":26},{"diffs":[[0,"var "],[-1,"item = mItemSpawner.allItem"],[1,"p = allEntitie"],[0,"s[i];"],[1,"   "],[0,"\n   "]],"start1":17195,"start2":17195,"length1":40,"length2":30},{"diffs":[[0,"   i"],[-1,"tem.update();\n"],[1,"f (!p.isDead){\n                    image(p.currentSprite, p.pos.x, p.pos.y); \n   "],[0,"    "]],"start1":17235,"start2":17235,"length1":22,"length2":89},{"diffs":[[0,"    if ("],[-1,"item.current"],[1,"p.shield"],[0,"Sprite !"]],"start1":17333,"start2":17333,"length1":28,"length2":24},{"diffs":[[0,"eldSprite !="],[1,"="],[0," null)"],[-1,"{"],[0,"\n"],[1,"    "],[0,"            "]],"start1":17346,"start2":17346,"length1":32,"length2":36},{"diffs":[[0,"age("],[-1,"item.current"],[1,"p.shield"],[0,"Sprite, "],[-1,"item"],[1,"p"],[0,".pos.x, "],[-1,"item"],[1,"p"],[0,".pos"]],"start1":17392,"start2":17392,"length1":44,"length2":34},{"diffs":[[0,"       }\n   "],[-1,"         }\n"],[0,"            "]],"start1":17441,"start2":17441,"length1":35,"length2":24},{"diffs":[[0,"    "],[-1,"for (var i in allEntities){\n                var p = allEntities[i];   \n                if (!p.isDead){"],[1,"    // draw players bullets\n                for (var b in p.bullets){\n                    b = p.bullets[b];"],[0,"\n   "]],"start1":17475,"start2":17475,"length1":110,"length2":115},{"diffs":[[0,"          image("],[-1,"p"],[1,"b"],[0,".currentSprite, "]],"start1":17597,"start2":17597,"length1":33,"length2":33},{"diffs":[[0,"Sprite, "],[-1,"p"],[1,"b"],[0,".pos.x, "],[-1,"p"],[1,"b"],[0,".pos.y);"],[-1," "],[0,"\n       "]],"start1":17622,"start2":17622,"length1":35,"length2":34},{"diffs":[[0,"                "],[1,"}\n"],[0,"                "]],"start1":17649,"start2":17649,"length1":32,"length2":34},{"diffs":[[0,"    "],[1,"}\n\n"],[0,"        "],[-1,"if (p.shieldSprite !== null)\n"],[1,"    // draw tiles rendered after the player\n    "],[0,"        "],[-1,"i"],[0,"ma"],[-1,"ge(p.shieldSprite, p.pos.x, p.pos.y); "],[1,"p1.postDrawMap(processing);\n"],[0,"\n   "]],"start1":17675,"start2":17675,"length1":94,"length2":105},{"diffs":[[0,"    "],[-1,"    }\n                     // draw players bullets\n                for (var b in p.bullets){\n                    b = p.bullets[b];"],[1,"//draw items:\n            for(var i in mItemSpawner.allItems){\n                var item = mItemSpawner.allItems[i];\n                item.update();\n                if (item.currentSprite != null){"],[0,"\n   "]],"start1":17785,"start2":17785,"length1":138,"length2":203},{"diffs":[[0,"          image("],[-1,"b"],[1,"item"],[0,".currentSprite, "]],"start1":17995,"start2":17995,"length1":33,"length2":36},{"diffs":[[0,"Sprite, "],[-1,"b"],[1,"item"],[0,".pos.x, "],[-1,"b"],[1,"item"],[0,".pos.y);"],[1," "],[0,"\n       "]],"start1":18023,"start2":18023,"length1":34,"length2":41},{"diffs":[[0,"              }\n"],[-1,"     "],[0,"            }\n  "]],"start1":18059,"start2":18059,"length1":37,"length2":32},{"diffs":[[0,"  }\n            "],[-1,"\n"],[0,"            //dr"]],"start1":18814,"start2":18814,"length1":33,"length2":32},{"diffs":[[0,"    "],[-1,"//draw map (processing need to use image function)"],[0,"\n   "]],"start1":18838,"start2":18838,"length1":58,"length2":8},{"diffs":[[0,"        "],[-1,"map1.postD"],[1,"gMenu.d"],[0,"rawM"],[-1,"ap"],[1,"enu"],[0,"(process"]],"start1":18847,"start2":18847,"length1":32,"length2":30},{"diffs":[[0,"sing);\n\n"],[-1,"            \n"],[0,"        "]],"start1":18876,"start2":18876,"length1":29,"length2":16}]],"length":20174,"saved":false}
{"ts":1375744947521,"patch":[[{"diffs":[[0,"(random("],[-1,"10"],[1,"5"],[0,") > 1){\n"]],"start1":15668,"start2":15668,"length1":18,"length2":17}]],"length":20173,"saved":false}
{"ts":1375744949869,"patch":[[{"diffs":[[0,"random ("],[-1,"10"],[1,"5"],[0,") > 1)?1"]],"start1":15782,"start2":15782,"length1":18,"length2":17}]],"length":20172,"saved":false}
{"ts":1375744983395,"patch":[[{"diffs":[[0,"(random("],[-1,"5"],[1,"4"],[0,") > 1){\n"]],"start1":15668,"start2":15668,"length1":17,"length2":17},{"diffs":[[0,"random ("],[-1,"5"],[1,"4"],[0,") > 1)?1"]],"start1":15782,"start2":15782,"length1":17,"length2":17}]],"length":20172,"saved":false}
{"ts":1375745029614,"patch":[[{"diffs":[[0,"IA.value.fire = "],[1,"true;//"],[0,"(Math.floor(rand"]],"start1":15535,"start2":15535,"length1":32,"length2":39}]],"length":20179,"saved":false}
{"ts":1375745270734,"patch":[[{"diffs":[[0,"x = "],[-1,"Math.floor(random(3)) -1;"],[1,"(random (2) > 1)?1:-1  "],[0,"\n   "]],"start1":15919,"start2":15919,"length1":33,"length2":31}]],"length":20177,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375817567672,"patch":[[{"diffs":[[0,"ameRate("],[-1,"3"],[1,"6"],[0,"0);\n    "]],"start1":452,"start2":452,"length1":17,"length2":17},{"diffs":[[0,"16*27};\n"],[1,"            players[0].level=1;\n\n"],[0,"        "]],"start1":1277,"start2":1277,"length1":16,"length2":49},{"diffs":[[0,"();\n"],[1,"\n"],[0,"        "],[-1,"}; // end setup\n         \n    "],[1,"    setInterval((function(col) {        \n                         return function() { col.computeCollisions(); }; \n                        })(collision), 5 );\n                      \n\n            //setInterval((function(col){return function(){col.computeCollisions();}}(collision), 100));\n        };  // end setup\n         \n    \n    //function fixedUpdate(){\n    //    console.log(\"teste\");\n    //}"],[0,"\n   "]],"start1":6929,"start2":6929,"length1":46,"length2":414},{"diffs":[[0,", 8,9);\n"],[1,"                    for (var i=1; i<=4; i++){\n    "],[0,"        "]],"start1":7942,"start2":7942,"length1":16,"length2":66},{"diffs":[[0,"tes( [0,"],[-1,"1"],[1,"i"],[0,",8,1], 3"]],"start1":8049,"start2":8049,"length1":17,"length2":17},{"diffs":[[0,"ayerUp1\""],[1,"+i"],[0,", \"playe"]],"start1":8076,"start2":8076,"length1":16,"length2":18},{"diffs":[[0,", \"playerRight1\""],[1,"+i"],[0,",\"playerDown1\",\""]],"start1":8086,"start2":8086,"length1":32,"length2":34},{"diffs":[[0,"+i,\"playerDown1\""],[1,"+i"],[0,",\"playerLeft1\", "]],"start1":8102,"start2":8102,"length1":32,"length2":34},{"diffs":[[0,"erLeft1\""],[1,"+i"],[0,", \"playe"]],"start1":8126,"start2":8126,"length1":16,"length2":18},{"diffs":[[0,"ayerUp2\""],[1,"+i"],[0,", \"playe"]],"start1":8141,"start2":8141,"length1":16,"length2":18},{"diffs":[[0,"rRight2\""],[1,"+i"],[0,",\"player"]],"start1":8159,"start2":8159,"length1":16,"length2":18},{"diffs":[[0,"erDown2\""],[1,"+i"],[0,",\"player"]],"start1":8175,"start2":8175,"length1":16,"length2":18},{"diffs":[[0,"ft2\""],[1,"+i"],[0,"]);"],[-1,"    //player1 - frame1 e frame2\n                                    \n                    playerSpriteSheet.setRectSprites( [4,0,4,1], 32,32, [\"spawn1\", \"spawn2\", \"spawn3\", \"spawn4\"]);\n                    playerSpriteSheet.setRectSprites( [0,0,2,1], 32,32, [\"shield1\", \"shield2\"]);\n                    playerSpriteSheet.setRectSprites( [2,0,2,1], 32,32, [\"generalAlive\", \"generalDead\"]);\n                    \n"],[1,"\n                        playerSpriteSheet.setAnimation([\"playerUp1\"+i,\"playerUp2\"+i],\"player1Up\"+i,15);\n                        playerSpriteSheet.setAnimation([\"playerRight1\"+i,\"playerRight2\"+i],\"player1Right\"+i,15);\n    "],[0,"    "]],"start1":8195,"start2":8195,"length1":419,"length2":235},{"diffs":[[0,"ayer"],[-1,"Up1\",\"playerUp2\"],\"player1Up\",15);\n"],[1,"Down1\"+i,\"playerDown2\"+i],\"player1Down\"+i,15); \n    "],[0,"    "]],"start1":8481,"start2":8481,"length1":43,"length2":60},{"diffs":[[0,"ayer"],[-1,"Righ"],[1,"Lef"],[0,"t1\""],[1,"+i"],[0,",\"player"],[-1,"Righ"],[1,"Lef"],[0,"t2\""],[1,"+i"],[0,"],\"p"]],"start1":8592,"start2":8592,"length1":30,"length2":32},{"diffs":[[0,"yer1"],[-1,"Right\",15);\n                    playerSpriteSheet.setAnimation([\"playerDown1\",\"playerDown2\"],\"player1Do"],[1,"Left\"+i,15); \n                    }\n                                    \n                    playerSpriteSheet.setRectSprites( [4,0,4,1], 32,32, [\"spawn1\", \"spawn2\", \"spa"],[0,"wn"],[1,"3"],[0,"\","],[-1,"15"],[1," \"spawn4\"]"],[0,");"],[-1," "],[0,"\n   "]],"start1":8626,"start2":8626,"length1":120,"length2":195},{"diffs":[[0,".set"],[-1,"Animation([\"playerLeft1\",\"playerLeft2\"],\"player1Left\",15); "],[1,"RectSprites( [0,0,2,1], 32,32, [\"shield1\", \"shield2\"]);\n                    playerSpriteSheet.setRectSprites( [2,0,2,1], 32,32, [\"generalAlive\", \"generalDead\"]);\n                    \n                    \n                  \n"],[0,"\n   "]],"start1":8855,"start2":8855,"length1":67,"length2":231},{"diffs":[[0,"(random("],[-1,"4"],[1,"3"],[0,") > 1){\n"]],"start1":16214,"start2":16214,"length1":17,"length2":17},{"diffs":[[0,"ons\n            "],[-1,""],[0,""],[1,"//"],[0,"collision.comput"]],"start1":17263,"start2":17263,"length1":32,"length2":34}]],"length":20718,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375818167565,"patch":[[{"diffs":[[0,"].level="],[-1,"1"],[1,"4"],[0,";\n\n     "]],"start1":1306,"start2":1306,"length1":17,"length2":17}]],"length":20718,"saved":false}
{"ts":1375818286057,"patch":[[{"diffs":[[0,"].level="],[-1,"4"],[1,"1"],[0,";\n\n     "]],"start1":1306,"start2":1306,"length1":17,"length2":17}]],"length":20718,"saved":false}
{"ts":1375818379090,"patch":[[{"diffs":[[0,"].level="],[-1,"1"],[1,"4"],[0,";\n\n     "]],"start1":1306,"start2":1306,"length1":17,"length2":17}]],"length":20718,"saved":false}
{"ts":1375818438914,"patch":[[{"diffs":[[0,"[0]."],[-1,"l"],[1,"updgradeL"],[0,"evel"],[-1,"=4"],[1,"(4)"],[0,";\n\n "]],"start1":1304,"start2":1304,"length1":15,"length2":24}]],"length":20727,"saved":false}
{"ts":1375818442312,"patch":[[{"diffs":[[0,"rs[0].up"],[-1,"d"],[0,"gradeLev"]],"start1":1302,"start2":1302,"length1":17,"length2":16}]],"length":20726,"saved":false}
{"ts":1375818445237,"patch":[[{"diffs":[[0,"].upgrad"],[-1,"e"],[0,"Level(4)"]],"start1":1306,"start2":1306,"length1":17,"length2":16}]],"length":20725,"saved":false}
{"ts":1375818446493,"patch":[[{"diffs":[[0,"].upgrad"],[1,"e"],[0,"Level(4)"]],"start1":1306,"start2":1306,"length1":16,"length2":17}]],"length":20726,"saved":false}
{"contributors":[],"silentsave":false,"ts":1376087875953,"patch":[[{"diffs":[[0,"            "],[-1,""],[0,""],[1,"startGame = 0;\n            "],[0,"var resoluti"]],"start1":309,"start2":309,"length1":24,"length2":51},{"diffs":[[0,"o 8\n            "],[1,"//"],[0,"enemySpawner.add"]],"start1":1101,"start2":1101,"length1":32,"length2":34},{"diffs":[[0,"ist("],[-1,"[1,1,2,5,1,  4,3,3,2,7,  4,4,1,1,3,  1,1,8,4,4]"],[0,");\n\n"]],"start1":1141,"start2":1141,"length1":55,"length2":8},{"diffs":[[0,"16*1"],[-1,"5"],[1,"3"],[0,", y:16*2"],[-1,"7"],[1,"6"],[0,"};\n "]],"start1":1250,"start2":1250,"length1":18,"length2":18},{"diffs":[[0,"nce(collision);\n"],[1,"            map1.setEnemySpawnerInstance(enemySpawner);\n"],[0,"            map1"]],"start1":2504,"start2":2504,"length1":32,"length2":88},{"diffs":[[0,"y);\n            "],[-1,""],[0,""],[1,"//"],[0,"map1.createMap()"]],"start1":2641,"start2":2641,"length1":32,"length2":34},{"diffs":[[0,"ry \n            "],[1,"//"],[0,"map1.drawRows([\""]],"start1":2717,"start2":2717,"length1":32,"length2":34},{"diffs":[[0,"6);\n            "],[1,"//"],[0,"map1.drawRows([\""]],"start1":2761,"start2":2761,"length1":32,"length2":34},{"diffs":[[0,");\n\n            "],[1,"//"],[0,"map1.drawInterva"]],"start1":2841,"start2":2841,"length1":32,"length2":34},{"diffs":[[0,"]);\n            "],[1,"//"],[0,"map1.drawInterva"]],"start1":2947,"start2":2947,"length1":32,"length2":34},{"diffs":[[0,"   \n            "],[1,"//"],[0,"map1.drawRects(["]],"start1":3034,"start2":3034,"length1":32,"length2":34},{"diffs":[[0,"]);\n            "],[1,"//"],[0,"map1.drawPattern"]],"start1":3099,"start2":3099,"length1":32,"length2":34},{"diffs":[[0,"\"],\n            "],[1,"//"],[0,"                "]],"start1":3166,"start2":3166,"length1":32,"length2":34},{"diffs":[[0,"            "],[1,"//"],[0,"map1.DoneBui"]],"start1":3277,"start2":3277,"length1":24,"length2":26},{"diffs":[[0,"              \n\n"],[1,"           \n"],[0,"            //se"]],"start1":7173,"start2":7173,"length1":32,"length2":44},{"diffs":[[0,"ith (this){\n"],[1,"            \n            if (startGame === 0) {  // put things that need to load only 1 time before the new stage starts\n                startGame++;\n                map1.currentMap = (map1.currentMap+1)%stages.length;\n                map1.loadMap();\n                players[0].spawnPlayer();\n                players[0].removeAllBullets();\n                setTimeout(function() { startGame++; }, 2500 );\n                      \n                return false;\n            } else if (startGame === 1){    //show Menu window\n                background(127,127,127);\n                textSize(30);        \n                text(\"level \"+(map1.currentMap+1), 320-50, 240);\n                return false;\n            }\n            \n            // end stage\n            if (enemySpawner.allEnemiesDead() && startGame===2){\n                startGame++;\n                setTimeout(function() { startGame=0; }, 2500 );\n            }\n            \n"],[0,"            "]],"start1":7545,"start2":7545,"length1":24,"length2":955},{"diffs":[[0,"mies);      "],[1,"\n"],[0,"     "],[1,"       gMenu.currentMap = map1.currentMap;\n            gMenu.numOflives = players[0].lives;"],[0,"\n           "]],"start1":8664,"start2":8664,"length1":29,"length2":121},{"diffs":[[0,"]);\n"],[-1,"                    \n                    \n                  \n\n                    "],[0,""],[1,""],[0,"\n   "]],"start1":10116,"start2":10116,"length1":90,"length2":8},{"diffs":[[0,"tem\"+i, "],[-1,"3"],[1,"8"],[0,");\n     "]],"start1":14027,"start2":14027,"length1":17,"length2":17},{"diffs":[[0,"nemies){    "],[1,"\n"],[0,"            "]],"start1":16823,"start2":16823,"length1":24,"length2":25},{"diffs":[[0,"   \n            "],[1,"    var enemy = enemies[e];"],[0,"\n               "]],"start1":16832,"start2":16832,"length1":32,"length2":59},{"diffs":[[0,"    "],[-1,"//probability of change:\n                if (random(25) < 1){\n                    IA.value.x = 0;\n                    IA.value.y = 0;\n                    IA.value.fire = true;//(Math.floor(random(3)) ="],[1,"\n                IA.value.fire =  (Math.floor(random(30)) == 0);\n                 \n                //probability of change:\n                if (enemy.isColliding)\n                    enemy.probOfChangeDirection-=20;\n                    \n                if (random(enemy.probOfChangeDirection--) < 1){\n                    enemy.probOfChangeDirection=200;\n                    IA.value.x = 0;\n                    IA.value.y "],[0,"= 0"],[-1,")"],[0,";\n "],[1,"                       \n"],[0,"    "]],"start1":16961,"start2":16961,"length1":216,"length2":459},{"diffs":[[0,"vement \n"],[1,"                    //console.log(random(3));\n"],[0,"        "]],"start1":17471,"start2":17471,"length1":16,"length2":62},{"diffs":[[0,"m(3) > 1"],[1,".25"],[0,"){\n     "]],"start1":17554,"start2":17554,"length1":16,"length2":19},{"diffs":[[0,"lue.y = "],[1,"1;//"],[0,"(random "]],"start1":17656,"start2":17656,"length1":16,"length2":20},{"diffs":[[0,"random ("],[-1,"4"],[1,"5"],[0,") > 1)?1"]],"start1":17669,"start2":17669,"length1":17,"length2":17},{"diffs":[[0," > 1)?1:"],[-1,"-1"],[1,"0"],[0," \n      "]],"start1":17679,"start2":17679,"length1":18,"length2":17},{"diffs":[[0,"    "],[-1,"IA.value.x = (random (2) > 1)?1:-1  "],[1,"if (random(5) > 1)\n                            IA.value.x = (random (2) > 1)?1:-1  \n                        else\n                            IA.value.y = -1;"],[0,"\n   "]],"start1":17785,"start2":17785,"length1":44,"length2":165},{"diffs":[[0,"ar all = players"],[-1,""],[0,""],[1,";//"],[0,".concat(enemies)"]],"start1":21086,"start2":21086,"length1":32,"length2":35},{"diffs":[[0,"ar all = players"],[-1,""],[0,""],[1,";//"],[0,".concat(enemies)"]],"start1":21582,"start2":21582,"length1":32,"length2":35}]],"length":22185,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377617762087,"patch":[[{"diffs":[[0,"    "],[-1,"// it does not seem to work\n    /* @pjs preload=\"cenary.png,player_sprites.png\";crips=\"true\"; */"],[1,"\n    loadedSounds=0;\n    howlSounds = {\n        numberOfSounds: 11,\n        gameStart: (new Howl({urls: ['sounds/Game_Start.mp3' ], onload:function(){loadedSounds++} })) ,\n        gameOver:  (new Howl({urls: ['sounds/Game_Over.mp3'  ], onload:function(){loadedSounds++} })) ,\n        playerShot:(new Howl({urls: ['sounds/player_shot.wav'], onload:function(){loadedSounds++} })) ,\n        hitBrick:  (new Howl({urls: ['sounds/hit_brick1.wav'], onload:function(){loadedSounds++} })) ,\n        hitWall:   (new Howl({urls: ['sounds/hit_wall.wav'], onload:function(){loadedSounds++} })) ,\n        hitArmor:  (new Howl({urls: ['sounds/hit_armor.wav'], onload:function(){loadedSounds++} })) ,\n        enemyExplosion: (new Howl({urls: ['sounds/enemy_explode.wav'], onload:function(){loadedSounds++} })) ,\n        playerExplosion: (new Howl({urls: ['sounds/player_explode.wav'], onload:function(){loadedSounds++} })) ,\n        spawnItem: (new Howl({urls: ['sounds/bonus_appear.wav'], onload:function(){loadedSounds++} })) ,\n        collectItem: (new Howl({urls: ['sounds/bonus_destroy.wav'], onload:function(){loadedSounds++} })) ,\n        song: (new Howl({urls: ['sounds/song2.mp3','sounds/song2.ogg'], buffer:true, loop:true, onload:function(){loadedSounds++} }))\n        //tankEngine: (new Howl({urls: ['sounds/player_engine2.mp3'], loop:true, buffer:true, onload:function(){ loadedSounds++} }))\n        //engineIdle: (new Howl({urls: ['sounds/tank_idle.wav'], loop:true, autoplay:true, onload:function(){loadedSounds++} })) \n    };\n    \n\n   \n    //gameSounds.engine.load();\n    //gameSounds.engine.setTime(14);\n"],[0,"\n   "]],"start1":38,"start2":38,"length1":104,"length2":1614},{"diffs":[[0,"ion (){\n"],[-1,"            "],[1,"\n"],[0,"\n       "]],"start1":1798,"start2":1798,"length1":28,"length2":17},{"diffs":[[0,"er);"],[-1,"\n            //normal tanks 1 to 4, special tanks 5 to 8\n            //enemySpawner.addEnemyList();"],[0,"\n\n  "]],"start1":2543,"start2":2543,"length1":107,"length2":8},{"diffs":[[0,"deLevel("],[-1,"4"],[1,"1"],[0,");\n\n    "]],"start1":2695,"start2":2695,"length1":17,"length2":17},{"diffs":[[0,"enemies\n"],[-1,"            \n"],[0,"        "]],"start1":2889,"start2":2889,"length1":29,"length2":16},{"diffs":[[0,",y:16});"],[1,"\n            steel.itemFree = false;"],[0,"\n\n      "]],"start1":3206,"start2":3206,"length1":16,"length2":52},{"diffs":[[0,"Through = true;\n"],[1,"            water.itemFree = false;\n"],[0,"            \n   "]],"start1":3335,"start2":3335,"length1":32,"length2":68},{"diffs":[[0,"   snow."],[-1,""],[0,""],[1,"playerPassThrough = true;\n            snow.isSlippery = true;\n            //snow."],[0,"hasColli"]],"start1":3696,"start2":3696,"length1":16,"length2":97},{"diffs":[[0,"});\n            "],[-1,""],[0,""],[1,"gray.itemFree = false;"],[0,"\n              \n"]],"start1":3869,"start2":3869,"length1":32,"length2":54},{"diffs":[[0,"y);\n"],[-1,"            //map1.createMap();\n            \n\n            // build scenary \n            //map1.drawRows([\"BRICK\"], 16);\n            //map1.drawRows([\"GRASS\",\"GRASS\", \"BRICK\", \"BRICK\"],12,13, 23,24);\n\n            //map1.drawIntervals('V',[\"WATER\", \"GRASS\", \"STEEL\"], [6,7, 10,11], [6,9], [11,20], [23,25]);\n            //map1.drawIntervals('H',[\"STEEL\"], [6,7], [12,20], [23,27]);\n            \n            //map1.drawRects([\"SNOW\"], [32,14,5,9], [8,14,2,9]);\n            //map1.drawPattern([[\"STEEL\",\"GRASS\",\"GRASS\",\"STEEL\"],\n            //                  [\"STEEL\",\"GRASS\",\"GRASS\",\"STEEL\"]], 18,18);\n                              \n            //map1.DoneBuilding();\n"],[0,"    "]],"start1":4203,"start2":4203,"length1":675,"length2":8},{"diffs":[[0,"   \n"],[-1,"            //setting player sprites.. dorgas mano\n"],[0,"    "]],"start1":4872,"start2":4872,"length1":59,"length2":8},{"diffs":[[0,"    }  \n"],[1,"\n"],[0,"        "]],"start1":5182,"start2":5182,"length1":16,"length2":17},{"diffs":[[0,".set"],[-1,"SpecialKey(ENTER"],[1,"MouseButton(LEFT"],[0,", ac"]],"start1":6581,"start2":6581,"length1":24,"length2":24},{"diffs":[[0,"s.fire);"],[-1,"     "],[0," input.s"]],"start1":6609,"start2":6609,"length1":21,"length2":16},{"diffs":[[0,");\n\n            "],[1,"//"],[0,"mItemSpawner.spa"]],"start1":7795,"start2":7795,"length1":32,"length2":34},{"diffs":[[0,"awnItem();\n\n"],[1,"            // Collisions Callback\n"],[0,"            "]],"start1":7828,"start2":7828,"length1":24,"length2":59},{"diffs":[[0,"                "],[-1,"\n\n"],[1,"  \n             "],[0,"           \n    "]],"start1":8048,"start2":8048,"length1":34,"length2":48},{"diffs":[[0,"  //"],[-1,"setInterval((function(col){return function(){col.computeCollisions();}}(collision), 100));\n        };  // end setup\n         \n    \n    //function fixedUpdate(){"],[1,"Highscores handler\n            highscores = new Highscores(); \n            highscores.bind(\"top10\");\n        };  // end setup"],[0,"\n    "],[-1,"//"],[0,"    "],[-1,"console.log(\"teste\");"],[0,"\n    "],[-1,"//}"],[0,"\n   "]],"start1":8102,"start2":8102,"length1":208,"length2":147},{"diffs":[[0," (this){"],[1,"\n\n            //loading sounds\n            if (howlSounds < howlSounds.numberOfSounds){\n                return false;\n            }"],[0,"\n       "]],"start1":8378,"start2":8378,"length1":16,"length2":147},{"diffs":[[0,"            "],[-1,"startGame++"],[1,"//gameSounds.gameStart.play();\n                //howlSounds.song.stop();\n                howlSounds.gameStart.play();\n                startGame++;\n                mItemSpawner.clearItems();\n                baseFlag.recreateFlag();\n                players[0].isFrozen = false;\n                enemySpawner.clearEnemies()"],[0,";\n          "]],"start1":8643,"start2":8643,"length1":35,"length2":343},{"diffs":[[0,"Game"],[-1,"++;"],[1,"=3; /*howlSounds.song.fadeIn(0.6,2000);*/"],[0," }, "],[1,"4"],[0,"2"],[-1,"5"],[0,"00 )"]],"start1":9211,"start2":9211,"length1":17,"length2":55},{"diffs":[[0,"7,127);\n"],[1,"                fill(255,255,255);\n"],[0,"        "]],"start1":9417,"start2":9417,"length1":16,"length2":51},{"diffs":[[0,"tGame==="],[-1,"2"],[1,"3"],[0,"){\n     "]],"start1":9698,"start2":9698,"length1":17,"length2":17},{"diffs":[[0,"Game"],[-1,"++;\n                setTimeout(function() { startGame=0; }, 2500 )"],[1,"=4;\n                //howlSounds.song.fadeOut(0,3000);\n                setTimeout(function() { startGame=0; }, 5000 );\n            }\n\n            //gameover\n            if ((players[0].lives < 0 || baseFlag.isDead) && startGame===3){\n                \n                \n                function promptHighScoreAndSend(){\n                    var playerName = prompt(\"You made \"+ players[0].gamePoints + \" points!\\nPlease enter your name\",\"AAA\");\n                    \n                    if (playerName!=null && playerName!=\"\"){\n                        sendScore(players[0].gamePoints,playerName);\n                    }\n                }\n                \n                setTimeout(promptHighScoreAndSend,2000);\n                howlSounds.gameOver.play();\n                players[0].setShieldOff();// = false;\n                if (!baseFlag.isDead){                   \n                    players[0].pos.x = 10000;\n                    players[0].pos.y = 10000;\n                } else {\n                    players[0].freeze();\n                }\n               \n                startGame=2;                \n                setTimeout(function() { startGame=5; }, 5000 );\n                setTimeout(function() { startGame=0; \n                                        players[0].lives = 4; \n                                        map1.currentMap = -1; \n                                        players[0].gamePoints = 0;  \n                                        players[0].upgradeLevel(1);}, 5000+8000 );\n            }\n            \n            //draw highscores\n            if (startGame===5){\n                //startGame=2;\n                background(127,127,127);\n                fill(255,255,255);\n                textSize(30);        \n                text(\"Highscores\", 320-80, 100);\n                \n                \n                text(highscores.getAsText(10), 320-120, 140);\n                \n                return false"],[0,";\n  "]],"start1":9731,"start2":9731,"length1":74,"length2":1929},{"diffs":[[0,";\n            }\n"],[1,"\n\n"],[0,"            \n   "]],"start1":11656,"start2":11656,"length1":32,"length2":34},{"diffs":[[0,"ies);   "],[1,"\n            gMenu.setPlayerPoints(0,players[0].gamePoints);"],[0,"   \n    "]],"start1":11864,"start2":11864,"length1":16,"length2":76},{"diffs":[[0,".lives;\n"],[1,"\n\n"],[0,"        "]],"start1":12025,"start2":12025,"length1":16,"length2":18},{"diffs":[[0,"hield\", "],[-1,"2"],[1,"3"],[0,"5);\n    "]],"start1":13459,"start2":13459,"length1":17,"length2":17},{"diffs":[[0,"(random("],[-1,"3"],[1,"2"],[0,"0)) == 0"]],"start1":20271,"start2":20271,"length1":17,"length2":17},{"diffs":[[0,"ection-="],[-1,"2"],[1,"3"],[0,"0;\n     "]],"start1":20430,"start2":20430,"length1":17,"length2":17},{"diffs":[[0,"ction--) < 1"],[1," && enemy.probOfChangeDirection<260 || \n                    (IA.value.x === 0 && IA.value.y === 0)"],[0,"){\n         "]],"start1":20512,"start2":20512,"length1":24,"length2":122},{"diffs":[[0,"rection="],[-1,"2"],[1,"3"],[0,"00;\n    "]],"start1":20665,"start2":20665,"length1":17,"length2":17},{"diffs":[[0,"(3) > 1."],[-1,"2"],[1,"3"],[0,"5){\n    "]],"start1":20914,"start2":20914,"length1":17,"length2":17},{"diffs":[[0,"(random("],[-1,"5"],[1,"6"],[0,") > 1)\n "]],"start1":21151,"start2":21151,"length1":17,"length2":17},{"diffs":[[0,"g);\n"],[-1,"\n            // DEBUG MODE FOR COLLIDERS\n            //collision.drawAllColliders(processing);\n        }\n      };\n    \n    "],[1,"            if (startGame === 2){\n                fill(255,0,0);\n                textSize(40); \n                text(\"Game Over\", 320-145, 240);  \n            }\n\n            // DEBUG MODE FOR COLLIDERS\n            //collision.drawAllColliders(processing);\n        }\n      };\n    \n        processing.mousePressed = function(){\n            var all = players;//.concat(enemies);\n            for(var p in all){ \n                input = all[p].input; \n                if (input.keymap[\"MOUSE_\"+mouseButton] != null && !input.inputPressed[input.keymap[\"MOUSE_\"+mouseButton]]){\n                    \n                    input.inputPressed[input.keymap[\"MOUSE_\"+mouseButton]] = true;\n                    input.keybindings[input.keymap[\"MOUSE_\"+mouseButton]].apply(this,[input,true]);\n                }      \n            }         \n        }\n\n        processing.mouseReleased = function(){\n            var all = players;//.concat(enemies);\n            for(var p in all){ \n                input = all[p].input; \n                if (input.keymap[\"MOUSE_\"+mouseButton] != null && input.inputPressed[input.keymap[\"MOUSE_\"+mouseButton]]){\n                    input.inputPressed[input.keymap[\"MOUSE_\"+mouseButton]] = false;\n                    input.keybindings[input.keymap[\"MOUSE_\"+mouseButton]].apply(this,[input,false]);\n                }      \n            }         \n        }"],[0,"\n   "]],"start1":24243,"start2":24243,"length1":131,"length2":1373},{"diffs":[[0," = function(){ \n"],[1,"  "],[0,"          var al"]],"start1":25660,"start2":25660,"length1":32,"length2":34},{"diffs":[[0,"ies);\n          "],[1,"  "],[0,"for(var p in all"]],"start1":25720,"start2":25720,"length1":32,"length2":34},{"diffs":[[0," \n              "],[1,"  "],[0,"input = all[p].i"]],"start1":25769,"start2":25769,"length1":32,"length2":34},{"diffs":[[0,";\n              "],[1," "],[1," "],[0,"if (input.keymap"]],"start1":25807,"start2":25807,"length1":32,"length2":34},{"diffs":[[0,"                "],[1,"    "],[0,"input.inputPress"]],"start1":25907,"start2":25907,"length1":32,"length2":36},{"diffs":[[0,"yCode]] = true;\n"],[1,"    "],[0,"                "]],"start1":25961,"start2":25961,"length1":32,"length2":36},{"diffs":[[0,"essing\n}"],[-1,""],[0,""],[1,"\n\n\n// send player score to the server\nvar sendScore = function(score,PlayerName) {\n    //console.log(score);\n    if (PlayerName == null) PlayerName = \"AAA\";\n    $.ajax({\n        url : \"/send\",\n        cache: false,\n        type: 'POST',\n        data: score.toString() + \",\"  + PlayerName,\n        success : function(result) {console.log(\"success\");highscores.refreshHighScore(false);}\n    });\n    return false;            \n};"],[0,"\n\n\nvar c"]],"start1":26631,"start2":26631,"length1":16,"length2":441}]],"length":27227,"saved":false}
{"ts":1377617856223,"patch":[[{"diffs":[[0,"               \n"],[1,"                //Botei isso no callback do sendScore :)\n                //highscores.refreshHighScore(false);\n"],[0,"                "]],"start1":11533,"start2":11533,"length1":32,"length2":143}]],"length":27338,"saved":false}
