{"ts":1375835155778,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"function itemSpawner(){\n    this.itemSpritesheet = null;\n    this.spawnArea = {x0:2*32,y0:1*32,x1:18*32,y1:14*32};\n    this.allItems = [];\n    this.collisionInstance;\n    this.enemySpawner = null;\n    this.map = null;\n    \n    this.setSpriteSheets = function(ss){\n        this.itemSpritesheet = ss;\n    }\n\n    this.setEnemySpawnerInstance = function(es){\n        this.enemySpawner = es;\n    }\n\n    this.setMapInstance = function(m){\n        this.map = m;\n    }\n    \n    this.setCollision = function(col){\n        this.collisionInstance = col;\n    }\n    \n    this.spawnItem = function(){\n        this.clearItems();\n        var pos = {x:0,y:0};\n        pos.x =  gridAlign (Math.random()*(this.spawnArea.x1 - this.spawnArea.x0) + this.spawnArea.x0) ;\n        pos.y = gridAlign(Math.random()*(this.spawnArea.y1 - this.spawnArea.y0)  + this.spawnArea.y0);\n        var itemSubtype = Math.floor(Math.random()*6);\n        \n        var item = new Item (pos.x,pos.y,this.itemSpritesheet,itemSubtype, this.itemEffect(itemSubtype));\n        this.allItems.push(item);\n        \n        this.collisionInstance.createStaticCollider({obj:this, type:\"item\", subtype:itemSubtype, item:item, x:pos.x, y:pos.y}, {x:pos.x,y:pos.y, w:32,h:32}, \n                                        this.defaultCollision);\n    }\n    \n    this.removeItem = function(item){\n        this.removeCollider(item);\n        item.itemPicked = true;\n        setTimeout((function(self, item) {            //Self-executing func which takes 'this' as self\n                         return function() {    //Return a function in the context of 'self'                             \n                             var i = self.allItems.indexOf(item);\n                             self.allItems.splice(i,1); \n                         };\n                     })(this, item),\n                     1500 );\n\n       \n    }\n    \n    this.removeCollider = function(item, opt_x, opt_y, type){\n        var x = opt_x || item.pos.x;\n        var y = opt_y || item.pos.y;\n        var t = type || item.type;         \n        this.collisionInstance.removeStaticCollider(x,y, t);\n    }\n\n    this.clearItems = function(){\n        this.allItems.splice(0, this.allItems.length);\n    }\n    \n    this.defaultCollision = function(info,other){\n        var self = info.obj;\n        if (other.type === \"player\"){\n            info.item.castEffect(other.obj, self.map, self.enemySpawner);\n            self.removeItem(info.item);\n        }\n    }\n\n    // the items can affect the player, the map and the enemySpawner\n    this.itemEffect = function(itemType){\n        if (itemType === 0) {           // estrela\n            return function(player, map, eSpawner){\n                player.upgradeLevel();\n            };\n        }\n        if (itemType === 1){            // granada\n            return function(player, map, eSpawner){\n                for (var i=eSpawner.enemies.length-1; i>=0; i--){\n                    eSpawner.enemies[i].die(4);\n                }\n            };\n        }\n        if (itemType === 2){            // escudo\n            return function(player, map, eSpawner){\n                player.setShieldOn(15000);\n            }\n        }\n        if (itemType === 3){            // casa de a√ßo\n            return function(player, map, eSpawner){\n                map.enableSolidBase(15000);\n            }\n        }\n        if (itemType === 4){            // vida +1\n            return function(player, map, eSpawner){\n                player.lives++;\n            }\n        }\n        if (itemType === 5){            // relogio\n            return function(player, map, eSpawner){\n                eSpawner.freezeEnemies(10000);\n            }\n        }\n    }\n}"]],"start1":0,"start2":0,"length1":0,"length2":3682}]],"length":3682}
{"contributors":[],"silentsave":false,"ts":1375835168518,"patch":[[{"diffs":[[0,"a = {x0:"],[-1,"2"],[1,"6"],[0,"*32,y0:1"]],"start1":74,"start2":74,"length1":17,"length2":17}]],"length":3682,"saved":false}
{"ts":1375835173881,"patch":[[{"diffs":[[0,"a = {x0:"],[-1,"6"],[1,"3"],[0,"*32,y0:1"]],"start1":74,"start2":74,"length1":17,"length2":17}]],"length":3682,"saved":false}
{"ts":1375835185991,"patch":[[{"diffs":[[0,"3*32,y0:"],[-1,"1"],[1,"2"],[0,"*32,x1:1"]],"start1":82,"start2":82,"length1":17,"length2":17}]],"length":3682,"saved":false}
{"ts":1375835782482,"patch":[[{"diffs":[[0,"x1:1"],[-1,"8"],[1,"3"],[0,"*32,y1:1"],[-1,"4"],[1,"3"],[0,"*32}"]],"start1":95,"start2":95,"length1":18,"length2":18}]],"length":3682,"saved":false}
